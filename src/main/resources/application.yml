spring: 
   config:
      activate:
         on-profile: dev
         
   security:
      oauth2:
         client:
            registration:
               google:
                  client-id: 
                  client-secret: 
                  scope: profile, email
                  redirect-uri: http://localhost:8080/oauth2/callback/google
                  client-name: google                           
               naver:
                  client-id: 
                  client-secret: 
                  redirect-uri: http://localhost:8080/oauth2/callback/naver
                  authorization-grant-type: authorization_code
                  client-name: naver
            provider:
               naver:
                  authorization-uri: https://nid.naver.com/oauth2.0/authorize
                  token-uri: https://nid.naver.com/oauth2.0/token
                  user-info-uri: https://openapi.naver.com/v1/nid/me
                  user-name-attribute: response  
   servlet:
       multipart:
           max-file-size: 300KB
           max-request-size: 500KB
           #location: C:\Temp # 어차피 images.path로 다시 저장할 것이므로 그냥 시스템 디폴트 값을 쓰도록 하자.
                  
logging:
  config: classpath:log4j2.xml
                  
                      
jwt:
   token-issuer: foo.com
   token-name: foo-app-jwt
   secret: 12345
   expire-time: 300 #sec

# 프론트엔드 애플리케이션은 어차피 SPA
frontend-app:
   entry: /app/list

# 관리자 계정
admins:
   - 55XXXXXX
   - 57XXXXXX

# 데이터베이스
jdbc:
   driverClassName: com.mysql.cj.jdbc.Driver
   url: jdbc:mysql://localhost:3306/mydb
   username: scott
   password: 1234

# 이미지 파일 외부 경로
images:
   hostUrl: http://localhost:8080/uploadimages/
   path: C:\_MyWork\images # 임의의 외부 경로

my-props:
   name:
      point: 200

---

spring: 
   config:
      activate:
         on-profile: prod
         
   security:
      oauth2:
         client:
            registration:
               google:
                  client-id: 
                  client-secret: 
                  scope: profile
                  redirect-uri: http://www.foo.com/oauth2/callback/google
                  client-name: google                           
               naver:
                  client-id: 
                  client-secret:  
                  redirect-uri: http://www.foo.com/oauth2/callback/naver
                  authorization-grant-type: authorization_code
                  client-name: naver
            provider:
               naver:
                  authorization-uri: https://nid.naver.com/oauth2.0/authorize
                  token-uri: https://nid.naver.com/oauth2.0/token
                  user-info-uri: https://openapi.naver.com/v1/nid/me
                  user-name-attribute: response
   servlet:
       multipart:
           max-file-size: 300KB
           max-request-size: 500KB                
                  
logging:
  config: classpath:log4j2.xml                              

jwt:
   toekn-issuer: foo.com
   token-name: foo-app-jwt
   secret: 12345
   expire-time: 900 #sec

frontend-app:
   entry: /app/list

# 관리자 계정
admins:
   - 55XXXXXX
   - 57XXXXXX
   
# 데이터베이스
jdbc:
   driverClassName: com.mysql.cj.jdbc.Driver
   url: jdbc:mysql://127.0.0.1:3306/mydb
   username: scott
   password: 1234

# 이미지 파일 외부 경로
images:
   hostUrl: http://www.foo.com/uploadimages/
   path: /var/www/images   
      
